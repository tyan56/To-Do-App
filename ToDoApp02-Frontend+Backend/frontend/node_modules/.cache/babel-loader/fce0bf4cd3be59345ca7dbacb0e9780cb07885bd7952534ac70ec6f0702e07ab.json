{"ast":null,"code":"import _objectSpread from\"D:/PRD PROJECT/ToDoApp02-system/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useCallback}from'react';import{todoApi}from'../services/api';import{FILTER_STATUS}from'../utils/constants';export const useTodos=()=>{const[todos,setTodos]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[filter,setFilter]=useState(FILTER_STATUS.ALL);const[stats,setStats]=useState({total:0,completed:0,pending:0});// 获取待办事项列表\nconst fetchTodos=useCallback(async function(){let status=arguments.length>0&&arguments[0]!==undefined?arguments[0]:filter;setLoading(true);setError(null);try{const response=await todoApi.getTodos(status);setTodos(response.todos);setStats({total:response.total,completed:response.completed_count,pending:response.pending_count});}catch(err){setError(err.message);console.error('获取待办事项失败:',err);}finally{setLoading(false);}},[filter]);// 添加待办事项\nconst addTodo=useCallback(async todoData=>{try{const newTodo=await todoApi.createTodo(todoData);setTodos(prev=>[...prev,newTodo]);setStats(prev=>_objectSpread(_objectSpread({},prev),{},{total:prev.total+1,pending:prev.pending+1}));return newTodo;}catch(err){setError(err.message);console.error('添加待办事项失败:',err);throw err;}},[]);// 更新待办事项\nconst updateTodo=useCallback(async(id,updates)=>{try{const updatedTodo=await todoApi.updateTodo(id,updates);setTodos(prev=>prev.map(todo=>todo.id===id?updatedTodo:todo));// 更新统计信息\nif(updates.completed!==undefined){setStats(prev=>{const oldTodo=todos.find(t=>t.id===id);if(!oldTodo)return prev;const wasCompleted=oldTodo.completed;const isCompleted=updates.completed;if(wasCompleted&&!isCompleted){return _objectSpread(_objectSpread({},prev),{},{completed:prev.completed-1,pending:prev.pending+1});}else if(!wasCompleted&&isCompleted){return _objectSpread(_objectSpread({},prev),{},{completed:prev.completed+1,pending:prev.pending-1});}return prev;});}return updatedTodo;}catch(err){setError(err.message);console.error('更新待办事项失败:',err);throw err;}},[todos]);// 删除待办事项\nconst deleteTodo=useCallback(async id=>{try{await todoApi.deleteTodo(id);const deletedTodo=todos.find(t=>t.id===id);setTodos(prev=>prev.filter(todo=>todo.id!==id));// 更新统计信息\nif(deletedTodo){setStats(prev=>_objectSpread(_objectSpread({},prev),{},{total:prev.total-1,completed:deletedTodo.completed?prev.completed-1:prev.completed,pending:!deletedTodo.completed?prev.pending-1:prev.pending}));}}catch(err){setError(err.message);console.error('删除待办事项失败:',err);throw err;}},[todos]);// 清除已完成事项\nconst clearCompleted=useCallback(async()=>{try{const response=await todoApi.clearCompleted();setTodos(prev=>prev.filter(todo=>!todo.completed));setStats(prev=>_objectSpread(_objectSpread({},prev),{},{total:prev.total-prev.completed,completed:0}));return response;}catch(err){setError(err.message);console.error('清除已完成事项失败:',err);throw err;}},[]);// 清空所有事项\nconst clearAll=useCallback(async()=>{try{const response=await todoApi.clearAll();setTodos([]);setStats({total:0,completed:0,pending:0});return response;}catch(err){setError(err.message);console.error('清空所有事项失败:',err);throw err;}},[]);// 切换筛选状态\nconst changeFilter=useCallback(newFilter=>{setFilter(newFilter);},[]);// 根据筛选状态获取显示的任务列表\nconst getFilteredTodos=useCallback(()=>{switch(filter){case FILTER_STATUS.COMPLETED:return todos.filter(todo=>todo.completed);case FILTER_STATUS.PENDING:return todos.filter(todo=>!todo.completed);default:return todos;}},[todos,filter]);// 初始化加载\nuseEffect(()=>{fetchTodos();},[fetchTodos]);return{todos:getFilteredTodos(),allTodos:todos,loading,error,filter,stats,addTodo,updateTodo,deleteTodo,clearCompleted,clearAll,changeFilter,refreshTodos:fetchTodos};};","map":{"version":3,"names":["useState","useEffect","useCallback","todoApi","FILTER_STATUS","useTodos","todos","setTodos","loading","setLoading","error","setError","filter","setFilter","ALL","stats","setStats","total","completed","pending","fetchTodos","status","arguments","length","undefined","response","getTodos","completed_count","pending_count","err","message","console","addTodo","todoData","newTodo","createTodo","prev","_objectSpread","updateTodo","id","updates","updatedTodo","map","todo","oldTodo","find","t","wasCompleted","isCompleted","deleteTodo","deletedTodo","clearCompleted","clearAll","changeFilter","newFilter","getFilteredTodos","COMPLETED","PENDING","allTodos","refreshTodos"],"sources":["D:/PRD PROJECT/ToDoApp02-system/frontend/src/hooks/useTodos.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { todoApi } from '../services/api';\r\nimport { FILTER_STATUS } from '../utils/constants';\r\n\r\nexport const useTodos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [filter, setFilter] = useState(FILTER_STATUS.ALL);\r\n  const [stats, setStats] = useState({\r\n    total: 0,\r\n    completed: 0,\r\n    pending: 0\r\n  });\r\n  \r\n  // 获取待办事项列表\r\n  const fetchTodos = useCallback(async (status = filter) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await todoApi.getTodos(status);\r\n      setTodos(response.todos);\r\n      setStats({\r\n        total: response.total,\r\n        completed: response.completed_count,\r\n        pending: response.pending_count\r\n      });\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('获取待办事项失败:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filter]);\r\n  \r\n  // 添加待办事项\r\n  const addTodo = useCallback(async (todoData) => {\r\n    try {\r\n      const newTodo = await todoApi.createTodo(todoData);\r\n      setTodos(prev => [...prev, newTodo]);\r\n      setStats(prev => ({\r\n        ...prev,\r\n        total: prev.total + 1,\r\n        pending: prev.pending + 1\r\n      }));\r\n      return newTodo;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('添加待办事项失败:', err);\r\n      throw err;\r\n    }\r\n  }, []);\r\n  \r\n  // 更新待办事项\r\n  const updateTodo = useCallback(async (id, updates) => {\r\n    try {\r\n      const updatedTodo = await todoApi.updateTodo(id, updates);\r\n      setTodos(prev => prev.map(todo => \r\n        todo.id === id ? updatedTodo : todo\r\n      ));\r\n      \r\n      // 更新统计信息\r\n      if (updates.completed !== undefined) {\r\n        setStats(prev => {\r\n          const oldTodo = todos.find(t => t.id === id);\r\n          if (!oldTodo) return prev;\r\n          \r\n          const wasCompleted = oldTodo.completed;\r\n          const isCompleted = updates.completed;\r\n          \r\n          if (wasCompleted && !isCompleted) {\r\n            return {\r\n              ...prev,\r\n              completed: prev.completed - 1,\r\n              pending: prev.pending + 1\r\n            };\r\n          } else if (!wasCompleted && isCompleted) {\r\n            return {\r\n              ...prev,\r\n              completed: prev.completed + 1,\r\n              pending: prev.pending - 1\r\n            };\r\n          }\r\n          return prev;\r\n        });\r\n      }\r\n      \r\n      return updatedTodo;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('更新待办事项失败:', err);\r\n      throw err;\r\n    }\r\n  }, [todos]);\r\n  \r\n  // 删除待办事项\r\n  const deleteTodo = useCallback(async (id) => {\r\n    try {\r\n      await todoApi.deleteTodo(id);\r\n      const deletedTodo = todos.find(t => t.id === id);\r\n      setTodos(prev => prev.filter(todo => todo.id !== id));\r\n      \r\n      // 更新统计信息\r\n      if (deletedTodo) {\r\n        setStats(prev => ({\r\n          ...prev,\r\n          total: prev.total - 1,\r\n          completed: deletedTodo.completed ? prev.completed - 1 : prev.completed,\r\n          pending: !deletedTodo.completed ? prev.pending - 1 : prev.pending\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('删除待办事项失败:', err);\r\n      throw err;\r\n    }\r\n  }, [todos]);\r\n  \r\n  // 清除已完成事项\r\n  const clearCompleted = useCallback(async () => {\r\n    try {\r\n      const response = await todoApi.clearCompleted();\r\n      setTodos(prev => prev.filter(todo => !todo.completed));\r\n      setStats(prev => ({\r\n        ...prev,\r\n        total: prev.total - prev.completed,\r\n        completed: 0\r\n      }));\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('清除已完成事项失败:', err);\r\n      throw err;\r\n    }\r\n  }, []);\r\n  \r\n  // 清空所有事项\r\n  const clearAll = useCallback(async () => {\r\n    try {\r\n      const response = await todoApi.clearAll();\r\n      setTodos([]);\r\n      setStats({\r\n        total: 0,\r\n        completed: 0,\r\n        pending: 0\r\n      });\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('清空所有事项失败:', err);\r\n      throw err;\r\n    }\r\n  }, []);\r\n  \r\n  // 切换筛选状态\r\n  const changeFilter = useCallback((newFilter) => {\r\n    setFilter(newFilter);\r\n  }, []);\r\n  \r\n  // 根据筛选状态获取显示的任务列表\r\n  const getFilteredTodos = useCallback(() => {\r\n    switch (filter) {\r\n      case FILTER_STATUS.COMPLETED:\r\n        return todos.filter(todo => todo.completed);\r\n      case FILTER_STATUS.PENDING:\r\n        return todos.filter(todo => !todo.completed);\r\n      default:\r\n        return todos;\r\n    }\r\n  }, [todos, filter]);\r\n  \r\n  // 初始化加载\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, [fetchTodos]);\r\n  \r\n  return {\r\n    todos: getFilteredTodos(),\r\n    allTodos: todos,\r\n    loading,\r\n    error,\r\n    filter,\r\n    stats,\r\n    addTodo,\r\n    updateTodo,\r\n    deleteTodo,\r\n    clearCompleted,\r\n    clearAll,\r\n    changeFilter,\r\n    refreshTodos: fetchTodos\r\n  };\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}