{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useTodos}from'../hooks/useTodos';import{useLocalStorage}from'../hooks/useLocalStorage';import TodoForm from'./TodoForm';import FilterBar from'./FilterBar';import TodoList from'./TodoList';import ActionBar from'./ActionBar';import LoadingSpinner from'./LoadingSpinner';import{FILTER_STATUS}from'../utils/constants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TodoApp=()=>{const{todos,loading,error,filter,stats,addTodo,updateTodo,deleteTodo,clearCompleted,clearAll,changeFilter,refreshTodos}=useTodos();// 使用本地存储保存筛选状态\nconst[savedFilter,setSavedFilter]=useLocalStorage('todo-filter',FILTER_STATUS.ALL);// 消息状态\nconst[message,setMessage]=useState({type:'',text:''});// 显示消息\nconst showMessage=(type,text)=>{setMessage({type,text});setTimeout(()=>setMessage({type:'',text:''}),3000);};// 初始化时恢复保存的筛选状态\nuseEffect(()=>{if(savedFilter!==filter){changeFilter(savedFilter);}},[savedFilter,filter,changeFilter]);// 保存筛选状态到本地存储\nconst handleFilterChange=newFilter=>{changeFilter(newFilter);setSavedFilter(newFilter);};// 处理添加任务\nconst handleAddTodo=async todoData=>{try{await addTodo(todoData);showMessage('success','任务添加成功！');}catch(err){showMessage('error',err.message||'添加任务失败');}};// 处理更新任务\nconst handleUpdateTodo=async(id,updates)=>{try{await updateTodo(id,updates);if(updates.completed!==undefined){const action=updates.completed?'完成':'取消完成';showMessage('success',\"\\u4EFB\\u52A1\\u5DF2\".concat(action,\"\\uFF01\"));}else{showMessage('success','任务更新成功！');}}catch(err){showMessage('error',err.message||'更新任务失败');}};// 处理删除任务\nconst handleDeleteTodo=async id=>{try{await deleteTodo(id);showMessage('success','任务删除成功！');}catch(err){showMessage('error',err.message||'删除任务失败');}};// 处理清除已完成任务\nconst handleClearCompleted=async()=>{try{const response=await clearCompleted();showMessage('success',response.message||'已完成任务清除成功！');}catch(err){showMessage('error',err.message||'清除已完成任务失败');}};// 处理清空所有任务\nconst handleClearAll=async()=>{try{const response=await clearAll();showMessage('success',response.message||'所有任务清空成功！');}catch(err){showMessage('error',err.message||'清空所有任务失败');}};// 处理错误重试\nconst handleRetry=()=>{refreshTodos();};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"app-title\",children:\"\\uD83D\\uDCCB \\u5F85\\u529E\\u4E8B\\u9879\\u7BA1\\u7406\"}),message.text&&/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(message.type,\"-message\"),children:message.text}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u9519\\u8BEF\\uFF1A\"}),error,/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline btn-sm\",onClick:handleRetry,style:{marginLeft:'10px'},children:\"\\u91CD\\u8BD5\"})]}),/*#__PURE__*/_jsx(TodoForm,{onAddTodo:handleAddTodo,loading:loading}),/*#__PURE__*/_jsx(FilterBar,{currentFilter:filter,onFilterChange:handleFilterChange,stats:stats}),/*#__PURE__*/_jsx(TodoList,{todos:todos,loading:loading,onUpdate:handleUpdateTodo,onDelete:handleDeleteTodo}),/*#__PURE__*/_jsx(ActionBar,{stats:stats,onClearCompleted:handleClearCompleted,onClearAll:handleClearAll,loading:loading}),loading&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:'50%',left:'50%',transform:'translate(-50%, -50%)',zIndex:1000,background:'rgba(255, 255, 255, 0.9)',padding:'20px',borderRadius:'8px',boxShadow:'0 4px 6px rgba(0, 0, 0, 0.1)'},children:/*#__PURE__*/_jsx(LoadingSpinner,{size:\"large\",text:\"\\u5904\\u7406\\u4E2D...\"})})]});};export default TodoApp;","map":{"version":3,"names":["React","useState","useEffect","useTodos","useLocalStorage","TodoForm","FilterBar","TodoList","ActionBar","LoadingSpinner","FILTER_STATUS","jsx","_jsx","jsxs","_jsxs","TodoApp","todos","loading","error","filter","stats","addTodo","updateTodo","deleteTodo","clearCompleted","clearAll","changeFilter","refreshTodos","savedFilter","setSavedFilter","ALL","message","setMessage","type","text","showMessage","setTimeout","handleFilterChange","newFilter","handleAddTodo","todoData","err","handleUpdateTodo","id","updates","completed","undefined","action","concat","handleDeleteTodo","handleClearCompleted","response","handleClearAll","handleRetry","className","children","onClick","style","marginLeft","onAddTodo","currentFilter","onFilterChange","onUpdate","onDelete","onClearCompleted","onClearAll","position","top","left","transform","zIndex","background","padding","borderRadius","boxShadow","size"],"sources":["D:/PRD PROJECT/ToDoApp02-system/frontend/src/components/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTodos } from '../hooks/useTodos';\r\nimport { useLocalStorage } from '../hooks/useLocalStorage';\r\nimport TodoForm from './TodoForm';\r\nimport FilterBar from './FilterBar';\r\nimport TodoList from './TodoList';\r\nimport ActionBar from './ActionBar';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport { FILTER_STATUS } from '../utils/constants';\r\n\r\nconst TodoApp = () => {\r\n  const {\r\n    todos,\r\n    loading,\r\n    error,\r\n    filter,\r\n    stats,\r\n    addTodo,\r\n    updateTodo,\r\n    deleteTodo,\r\n    clearCompleted,\r\n    clearAll,\r\n    changeFilter,\r\n    refreshTodos\r\n  } = useTodos();\r\n\r\n  // 使用本地存储保存筛选状态\r\n  const [savedFilter, setSavedFilter] = useLocalStorage('todo-filter', FILTER_STATUS.ALL);\r\n\r\n  // 消息状态\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n\r\n  // 显示消息\r\n  const showMessage = (type, text) => {\r\n    setMessage({ type, text });\r\n    setTimeout(() => setMessage({ type: '', text: '' }), 3000);\r\n  };\r\n\r\n  // 初始化时恢复保存的筛选状态\r\n  useEffect(() => {\r\n    if (savedFilter !== filter) {\r\n      changeFilter(savedFilter);\r\n    }\r\n  }, [savedFilter, filter, changeFilter]);\r\n\r\n  // 保存筛选状态到本地存储\r\n  const handleFilterChange = (newFilter) => {\r\n    changeFilter(newFilter);\r\n    setSavedFilter(newFilter);\r\n  };\r\n\r\n  // 处理添加任务\r\n  const handleAddTodo = async (todoData) => {\r\n    try {\r\n      await addTodo(todoData);\r\n      showMessage('success', '任务添加成功！');\r\n    } catch (err) {\r\n      showMessage('error', err.message || '添加任务失败');\r\n    }\r\n  };\r\n\r\n  // 处理更新任务\r\n  const handleUpdateTodo = async (id, updates) => {\r\n    try {\r\n      await updateTodo(id, updates);\r\n      if (updates.completed !== undefined) {\r\n        const action = updates.completed ? '完成' : '取消完成';\r\n        showMessage('success', `任务已${action}！`);\r\n      } else {\r\n        showMessage('success', '任务更新成功！');\r\n      }\r\n    } catch (err) {\r\n      showMessage('error', err.message || '更新任务失败');\r\n    }\r\n  };\r\n\r\n  // 处理删除任务\r\n  const handleDeleteTodo = async (id) => {\r\n    try {\r\n      await deleteTodo(id);\r\n      showMessage('success', '任务删除成功！');\r\n    } catch (err) {\r\n      showMessage('error', err.message || '删除任务失败');\r\n    }\r\n  };\r\n\r\n  // 处理清除已完成任务\r\n  const handleClearCompleted = async () => {\r\n    try {\r\n      const response = await clearCompleted();\r\n      showMessage('success', response.message || '已完成任务清除成功！');\r\n    } catch (err) {\r\n      showMessage('error', err.message || '清除已完成任务失败');\r\n    }\r\n  };\r\n\r\n  // 处理清空所有任务\r\n  const handleClearAll = async () => {\r\n    try {\r\n      const response = await clearAll();\r\n      showMessage('success', response.message || '所有任务清空成功！');\r\n    } catch (err) {\r\n      showMessage('error', err.message || '清空所有任务失败');\r\n    }\r\n  };\r\n\r\n  // 处理错误重试\r\n  const handleRetry = () => {\r\n    refreshTodos();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"app-title\">📋 待办事项管理</h1>\r\n      \r\n      {/* 消息提示 */}\r\n      {message.text && (\r\n        <div className={`${message.type}-message`}>\r\n          {message.text}\r\n        </div>\r\n      )}\r\n      \r\n      {/* 错误提示 */}\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <strong>错误：</strong>{error}\r\n          <button \r\n            className=\"btn btn-outline btn-sm\" \r\n            onClick={handleRetry}\r\n            style={{ marginLeft: '10px' }}\r\n          >\r\n            重试\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {/* 添加任务表单 */}\r\n      <TodoForm \r\n        onAddTodo={handleAddTodo}\r\n        loading={loading}\r\n      />\r\n      \r\n      {/* 筛选栏 */}\r\n      <FilterBar\r\n        currentFilter={filter}\r\n        onFilterChange={handleFilterChange}\r\n        stats={stats}\r\n      />\r\n      \r\n      {/* 任务列表 */}\r\n      <TodoList\r\n        todos={todos}\r\n        loading={loading}\r\n        onUpdate={handleUpdateTodo}\r\n        onDelete={handleDeleteTodo}\r\n      />\r\n      \r\n      {/* 操作栏 */}\r\n      <ActionBar\r\n        stats={stats}\r\n        onClearCompleted={handleClearCompleted}\r\n        onClearAll={handleClearAll}\r\n        loading={loading}\r\n      />\r\n      \r\n      {/* 全局加载状态 */}\r\n      {loading && (\r\n        <div style={{ \r\n          position: 'fixed', \r\n          top: '50%', \r\n          left: '50%', \r\n          transform: 'translate(-50%, -50%)',\r\n          zIndex: 1000,\r\n          background: 'rgba(255, 255, 255, 0.9)',\r\n          padding: '20px',\r\n          borderRadius: '8px',\r\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\r\n        }}>\r\n          <LoadingSpinner size=\"large\" text=\"处理中...\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}