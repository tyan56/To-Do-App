{"ast":null,"code":"import _objectSpread from\"D:/PRD PROJECT/ToDoApp02-system/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api/v1';class ApiService{constructor(baseURL){this.baseURL=baseURL;}async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(this.baseURL).concat(endpoint);const config=_objectSpread({headers:_objectSpread({'Content-Type':'application/json'},options.headers)},options);try{const response=await fetch(url,config);if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.detail||\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('API请求失败:',error);throw error;}}async getTodos(){let status=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'all';let page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;return this.request(\"/todos?status=\".concat(status,\"&page=\").concat(page,\"&limit=\").concat(limit));}async createTodo(todoData){return this.request('/todos',{method:'POST',body:JSON.stringify(todoData)});}async updateTodo(id,updates){return this.request(\"/todos/\".concat(id),{method:'PUT',body:JSON.stringify(updates)});}async deleteTodo(id){return this.request(\"/todos/\".concat(id),{method:'DELETE'});}async clearCompleted(){return this.request('/todos/completed',{method:'DELETE'});}async clearAll(){return this.request('/todos/all',{method:'DELETE'});}}export const todoApi=new ApiService(API_BASE_URL);","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","request","endpoint","options","arguments","length","undefined","url","concat","config","_objectSpread","headers","response","fetch","ok","errorData","json","catch","Error","detail","status","error","console","getTodos","page","limit","createTodo","todoData","method","body","JSON","stringify","updateTodo","id","updates","deleteTodo","clearCompleted","clearAll","todoApi"],"sources":["D:/PRD PROJECT/ToDoApp02-system/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\r\n\r\nclass ApiService {\r\n  constructor(baseURL) {\r\n    this.baseURL = baseURL;\r\n  }\r\n  \r\n  async request(endpoint, options = {}) {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n    \r\n    try {\r\n      const response = await fetch(url, config);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API请求失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  async getTodos(status = 'all', page = 1, limit = 50) {\r\n    return this.request(`/todos?status=${status}&page=${page}&limit=${limit}`);\r\n  }\r\n  \r\n  async createTodo(todoData) {\r\n    return this.request('/todos', {\r\n      method: 'POST',\r\n      body: JSON.stringify(todoData),\r\n    });\r\n  }\r\n  \r\n  async updateTodo(id, updates) {\r\n    return this.request(`/todos/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(updates),\r\n    });\r\n  }\r\n  \r\n  async deleteTodo(id) {\r\n    return this.request(`/todos/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n  \r\n  async clearCompleted() {\r\n    return this.request('/todos/completed', {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n  \r\n  async clearAll() {\r\n    return this.request('/todos/all', {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n}\r\n\r\nexport const todoApi = new ApiService(API_BASE_URL);\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}